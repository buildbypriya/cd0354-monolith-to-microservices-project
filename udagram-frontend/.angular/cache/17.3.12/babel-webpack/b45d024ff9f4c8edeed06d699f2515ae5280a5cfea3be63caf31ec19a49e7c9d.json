{"ast":null,"code":"import { FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@ionic/angular\";\nexport class AuthRegisterComponent {\n  constructor(formBuilder, auth, modal) {\n    this.formBuilder = formBuilder;\n    this.auth = auth;\n    this.modal = modal;\n    this.error = '';\n  }\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      password_confirm: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')])),\n      name: new FormControl('', Validators.compose([Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+$')]))\n    }, {\n      validators: this.passwordsMatch\n    });\n  }\n  onSubmit($event) {\n    $event.preventDefault();\n    if (!this.registerForm.valid) {\n      return;\n    }\n    const newuser = {\n      email: this.registerForm.controls['email'].value,\n      name: this.registerForm.controls['name'].value\n    };\n    this.auth.register(newuser, this.registerForm.controls['password'].value).then(user => {\n      this.modal.dismiss();\n    }).catch(e => {\n      this.error = e.statusText;\n      throw e;\n    });\n  }\n  passwordsMatch(group) {\n    return group.controls['password'].value === group.controls['password_confirm'].value ? null : {\n      passwordsMisMatch: true\n    };\n  }\n  static {\n    this.ɵfac = function AuthRegisterComponent_Factory(t) {\n      return new (t || AuthRegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ModalController));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AuthRegisterComponent,\n      selectors: [[\"app-auth-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 20,\n      vars: 3,\n      consts: [[3, \"submit\", \"formGroup\"], [\"position\", \"floating\", \"color\", \"primary\"], [\"type\", \"text\", \"formControlName\", \"name\", \"required\", \"\"], [\"type\", \"text\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password_confirm\", \"required\", \"\"], [\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"]],\n      template: function AuthRegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"submit\", function AuthRegisterComponent_Template_form_submit_0_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵelementStart(1, \"ion-item\")(2, \"ion-label\", 1);\n          i0.ɵɵtext(3, \"Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(4, \"ion-input\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"ion-item\")(6, \"ion-label\", 1);\n          i0.ɵɵtext(7, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(8, \"ion-input\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 1);\n          i0.ɵɵtext(11, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(12, \"ion-input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"ion-item\")(14, \"ion-label\", 1);\n          i0.ɵɵtext(15, \"Confirm Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(16, \"ion-input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"ion-button\", 6);\n          i0.ɵɵtext(18, \" Register \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtext(19);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n          i0.ɵɵadvance(17);\n          i0.ɵɵproperty(\"disabled\", !ctx.registerForm.valid);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\" \", ctx.error, \" \");\n        }\n      },\n      dependencies: [IonicModule, i3.IonButton, i3.IonInput, i3.IonItem, i3.IonLabel, i3.TextValueAccessor, CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormControl","Validators","ReactiveFormsModule","IonicModule","CommonModule","AuthRegisterComponent","constructor","formBuilder","auth","modal","error","ngOnInit","registerForm","group","password_confirm","required","password","email","compose","pattern","name","validators","passwordsMatch","onSubmit","$event","preventDefault","valid","newuser","controls","value","register","then","user","dismiss","catch","e","statusText","passwordsMisMatch","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","ModalController","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","AuthRegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","AuthRegisterComponent_Template_form_submit_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵproperty","ɵɵadvance","ɵɵtextInterpolate1","IonButton","IonInput","IonItem","IonLabel","TextValueAccessor","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","styles"],"sources":["/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/auth/auth-register/auth-register.component.ts","/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/auth/auth-register/auth-register.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule, ModalController } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { AuthService } from '../services/auth.service';\nimport { User } from '../models/user.model';\n\n@Component({\n  selector: 'app-auth-register',\n  templateUrl: './auth-register.component.html',\n  styleUrls: ['./auth-register.component.scss'],\n  standalone: true,\n  imports: [\n    IonicModule,\n    CommonModule,\n    ReactiveFormsModule\n  ]\n})\nexport class AuthRegisterComponent implements OnInit {\n  registerForm!: FormGroup;\n  error: string = '';\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private auth: AuthService,\n    private modal: ModalController\n  ) { }\n\n  ngOnInit() {\n    this.registerForm = this.formBuilder.group({\n      password_confirm: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required),\n      email: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')\n      ])),\n      name: new FormControl('', Validators.compose([\n        Validators.required,\n        Validators.pattern('^[a-zA-Z0-9_.+-]+$')\n      ]))\n    }, { validators: this.passwordsMatch });\n  }\n\n  onSubmit($event: Event) {\n    $event.preventDefault();\n\n    if (!this.registerForm.valid) { return; }\n\n    const newuser: User = {\n      email: this.registerForm.controls['email'].value,\n      name: this.registerForm.controls['name'].value\n    };\n\n    this.auth.register(newuser, this.registerForm.controls['password'].value)\n      .then((user) => {\n        this.modal.dismiss();\n      })\n      .catch((e) => {\n        this.error = e.statusText;\n        throw e;\n      });\n  }\n\n  passwordsMatch(group: FormGroup) {\n    return group.controls['password'].value === group.controls['password_confirm'].value \n      ? null \n      : { passwordsMisMatch: true };\n  }\n}","<form [formGroup]=\"registerForm\" (submit)=\"onSubmit($event)\">\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Name</ion-label>\n      <ion-input type=\"text\" formControlName=\"name\" required></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Email</ion-label>\n      <ion-input type=\"text\" formControlName=\"email\" required></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Password</ion-label>\n      <ion-input type=\"password\" formControlName=\"password\" required></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\" color=\"primary\">Confirm Password</ion-label>\n      <ion-input type=\"password\" formControlName=\"password_confirm\" required></ion-input>\n    </ion-item>\n    <ion-button \n      color=\"primary\" \n      type=\"submit\"\n      [disabled]=\"!registerForm.valid \">\n      Register\n    </ion-button> {{error}}\n  </form>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}