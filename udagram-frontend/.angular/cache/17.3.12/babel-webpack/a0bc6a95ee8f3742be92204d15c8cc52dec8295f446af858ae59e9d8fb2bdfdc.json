{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/feed.provider.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nfunction FeedUploadComponent_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.previewDataUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FeedUploadComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵtext(1, \" Select a Photo \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let FeedUploadComponent = /*#__PURE__*/(() => {\n  class FeedUploadComponent {\n    constructor(feed, formBuilder, loadingController, modalController) {\n      this.feed = feed;\n      this.formBuilder = formBuilder;\n      this.loadingController = loadingController;\n      this.modalController = modalController;\n      this.previewDataUrl = null;\n      this.file = null;\n    }\n    ngOnInit() {\n      this.uploadForm = this.formBuilder.group({\n        caption: new FormControl('', Validators.required)\n      });\n    }\n    setPreviewDataUrl(file) {\n      const reader = new FileReader();\n      reader.onloadend = () => {\n        this.previewDataUrl = reader.result;\n      };\n      reader.readAsDataURL(file);\n    }\n    selectImage(event) {\n      const element = event.currentTarget;\n      const fileList = element.files;\n      if (fileList) {\n        this.file = fileList[0];\n        this.setPreviewDataUrl(this.file);\n      }\n    }\n    onSubmit(event) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        event.preventDefault();\n        const loading = yield _this.loadingController.create();\n        yield loading.present();\n        if (!_this.uploadForm.valid || !_this.file) {\n          return;\n        }\n        try {\n          yield _this.feed.uploadFeedItem(_this.uploadForm.controls['caption'].value, _this.file);\n          yield _this.modalController.dismiss();\n        } finally {\n          yield loading.dismiss();\n        }\n      })();\n    }\n    cancel() {\n      this.modalController.dismiss();\n    }\n    static {\n      this.ɵfac = function FeedUploadComponent_Factory(t) {\n        return new (t || FeedUploadComponent)(i0.ɵɵdirectiveInject(i1.FeedProviderService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i3.ModalController));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: FeedUploadComponent,\n        selectors: [[\"app-feed-upload\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 12,\n        vars: 4,\n        consts: [[3, \"submit\", \"formGroup\"], [\"type\", \"file\", \"accept\", \"image/*\", 2, \"display\", \"none\", 3, \"change\"], [\"style\", \"width:50px; height: 50px;\", 3, \"src\", 4, \"ngIf\"], [\"ion-button\", \"\", \"color\", \"secondary\", 4, \"ngIf\"], [\"position\", \"floating\", \"color\", \"primary\"], [\"type\", \"text\", \"formControlName\", \"caption\", \"required\", \"\"], [\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [2, \"width\", \"50px\", \"height\", \"50px\", 3, \"src\"], [\"ion-button\", \"\", \"color\", \"secondary\"]],\n        template: function FeedUploadComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0);\n            i0.ɵɵlistener(\"submit\", function FeedUploadComponent_Template_form_submit_0_listener($event) {\n              return ctx.onSubmit($event);\n            });\n            i0.ɵɵtext(1, \"` \");\n            i0.ɵɵelementStart(2, \"label\")(3, \"input\", 1);\n            i0.ɵɵlistener(\"change\", function FeedUploadComponent_Template_input_change_3_listener($event) {\n              return ctx.selectImage($event);\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(4, FeedUploadComponent_img_4_Template, 1, 1, \"img\", 2)(5, FeedUploadComponent_a_5_Template, 2, 0, \"a\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 4);\n            i0.ɵɵtext(8, \"Caption\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(9, \"ion-input\", 5);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(10, \"ion-button\", 6);\n            i0.ɵɵtext(11, \" Post \");\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n            i0.ɵɵadvance(4);\n            i0.ɵɵproperty(\"ngIf\", ctx.previewDataUrl);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"ngIf\", !ctx.previewDataUrl);\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"disabled\", !ctx.uploadForm.valid || !ctx.file);\n          }\n        },\n        dependencies: [IonicModule, i3.IonButton, i3.IonInput, i3.IonItem, i3.IonLabel, i3.TextValueAccessor, CommonModule, i4.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName]\n      });\n    }\n  }\n  return FeedUploadComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}