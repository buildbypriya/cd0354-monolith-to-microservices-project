{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MenubarComponent } from './menubar/menubar.component';\nimport { environment } from '../environments/environment';\nimport { StatusBar } from '@capacitor/status-bar';\nimport { SplashScreen } from '@capacitor/splash-screen';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(platform) {\n      this.platform = platform;\n      this.appPages = [{\n        title: 'Home',\n        url: '/home',\n        icon: 'home'\n      }];\n      this.appName = environment.appName;\n      this.initializeApp();\n    }\n    initializeApp() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        yield _this.platform.ready();\n        // Only try to use Capacitor plugins on mobile platforms\n        if (_this.platform.is('capacitor')) {\n          try {\n            yield StatusBar.setBackgroundColor({\n              color: '#3880ff'\n            });\n            yield SplashScreen.hide();\n          } catch (err) {\n            console.warn('Capacitor plugins not available', err);\n          }\n        }\n        document.title = environment.appName;\n      })();\n    }\n    static {\n      this.ɵfac = function AppComponent_Factory(t) {\n        return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AppComponent,\n        selectors: [[\"app-root\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 4,\n        vars: 0,\n        template: function AppComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"ion-app\");\n            i0.ɵɵelement(1, \"app-menubar\");\n            i0.ɵɵelementStart(2, \"ion-content\");\n            i0.ɵɵelement(3, \"ion-router-outlet\");\n            i0.ɵɵelementEnd()();\n          }\n        },\n        dependencies: [IonicModule, i1.IonApp, i1.IonContent, i1.IonRouterOutlet, CommonModule, RouterModule, MenubarComponent],\n        encapsulation: 2\n      });\n    }\n  }\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}