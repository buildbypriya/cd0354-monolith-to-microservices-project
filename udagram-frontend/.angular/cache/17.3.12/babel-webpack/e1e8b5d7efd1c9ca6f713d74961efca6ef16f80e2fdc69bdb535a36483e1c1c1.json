{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/api/api.service\";\nconst JWT_LOCALSTORE_KEY = 'jwt';\nconst USER_LOCALSTORE_KEY = 'user';\nexport class AuthService {\n  constructor(api) {\n    this.api = api;\n    this.currentUser$ = new BehaviorSubject(null);\n    this.initToken();\n  }\n  initToken() {\n    const token = localStorage.getItem(JWT_LOCALSTORE_KEY);\n    const user = JSON.parse(localStorage.getItem(USER_LOCALSTORE_KEY));\n    if (token && user) {\n      this.setTokenAndUser(token, user);\n    }\n  }\n  setTokenAndUser(token, user) {\n    localStorage.setItem(JWT_LOCALSTORE_KEY, token);\n    localStorage.setItem(USER_LOCALSTORE_KEY, JSON.stringify(user));\n    this.api.setAuthToken(token);\n    this.currentUser$.next(user);\n  }\n  login(email, password) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.api.post('/users/auth/login', {\n        email: email,\n        password: password\n      }).then(res => {\n        _this.setTokenAndUser(res.token, res.user);\n        return res;\n      }).catch(e => {\n        throw e;\n      });\n      // return user !== undefined;\n    })();\n  }\n  logout() {\n    this.setTokenAndUser(null, null);\n    return true;\n  }\n  register(user, password) {\n    return this.api.post('/users/auth/', {\n      email: user.email,\n      password: password\n    }).then(res => {\n      this.setTokenAndUser(res.token, res.user);\n      return res;\n    }).catch(e => {\n      throw e;\n    });\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(t) {\n      return new (t || AuthService)(i0.ɵɵinject(i1.ApiService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","JWT_LOCALSTORE_KEY","USER_LOCALSTORE_KEY","AuthService","constructor","api","currentUser$","initToken","token","localStorage","getItem","user","JSON","parse","setTokenAndUser","setItem","stringify","setAuthToken","next","login","email","password","_this","_asyncToGenerator","post","then","res","catch","e","logout","register","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/auth/services/auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\nimport { User } from '../models/user.model';\nimport { ApiService } from 'src/app/api/api.service';\nimport { catchError, tap } from 'rxjs/operators';\n\nconst JWT_LOCALSTORE_KEY = 'jwt';\nconst USER_LOCALSTORE_KEY = 'user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  currentUser$: BehaviorSubject<User> = new BehaviorSubject<User>(null);\n  constructor( private api: ApiService ) {\n    this.initToken();\n  }\n\n  initToken() {\n    const token = localStorage.getItem(JWT_LOCALSTORE_KEY);\n    const user = <User> JSON.parse(localStorage.getItem(USER_LOCALSTORE_KEY));\n    if (token && user) {\n      this.setTokenAndUser(token, user);\n    }\n  }\n\n  setTokenAndUser(token: string, user: User) {\n    localStorage.setItem(JWT_LOCALSTORE_KEY, token);\n    localStorage.setItem(USER_LOCALSTORE_KEY, JSON.stringify(user));\n    this.api.setAuthToken(token);\n    this.currentUser$.next(user);\n  }\n\n  async login(email: string, password: string): Promise<any> {\n    return this.api.post('/users/auth/login',\n              {email: email, password: password})\n              .then((res) => {\n                this.setTokenAndUser(res.token, res.user);\n                return res;\n              })\n              .catch((e) => { throw e; });\n      // return user !== undefined;\n  }\n\n  logout(): boolean {\n    this.setTokenAndUser(null, null);\n    return true;\n  }\n\n  register(user: User, password: string): Promise<any> {\n    return this.api.post('/users/auth/',\n              {email: user.email, password: password})\n              .then((res) => {\n                this.setTokenAndUser(res.token, res.user);\n                return res;\n              })\n              .catch((e) => { throw e; });\n  }\n}\n"],"mappings":";AACA,SAASA,eAAe,QAAoB,MAAM;;;AAKlD,MAAMC,kBAAkB,GAAG,KAAK;AAChC,MAAMC,mBAAmB,GAAG,MAAM;AAKlC,OAAM,MAAOC,WAAW;EAEtBC,YAAqBC,GAAe;IAAf,KAAAA,GAAG,GAAHA,GAAG;IADxB,KAAAC,YAAY,GAA0B,IAAIN,eAAe,CAAO,IAAI,CAAC;IAEnE,IAAI,CAACO,SAAS,EAAE;EAClB;EAEAA,SAASA,CAAA;IACP,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAACT,kBAAkB,CAAC;IACtD,MAAMU,IAAI,GAAUC,IAAI,CAACC,KAAK,CAACJ,YAAY,CAACC,OAAO,CAACR,mBAAmB,CAAC,CAAC;IACzE,IAAIM,KAAK,IAAIG,IAAI,EAAE;MACjB,IAAI,CAACG,eAAe,CAACN,KAAK,EAAEG,IAAI,CAAC;IACnC;EACF;EAEAG,eAAeA,CAACN,KAAa,EAAEG,IAAU;IACvCF,YAAY,CAACM,OAAO,CAACd,kBAAkB,EAAEO,KAAK,CAAC;IAC/CC,YAAY,CAACM,OAAO,CAACb,mBAAmB,EAAEU,IAAI,CAACI,SAAS,CAACL,IAAI,CAAC,CAAC;IAC/D,IAAI,CAACN,GAAG,CAACY,YAAY,CAACT,KAAK,CAAC;IAC5B,IAAI,CAACF,YAAY,CAACY,IAAI,CAACP,IAAI,CAAC;EAC9B;EAEMQ,KAAKA,CAACC,KAAa,EAAEC,QAAgB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACzC,OAAOD,KAAI,CAACjB,GAAG,CAACmB,IAAI,CAAC,mBAAmB,EAC9B;QAACJ,KAAK,EAAEA,KAAK;QAAEC,QAAQ,EAAEA;MAAQ,CAAC,CAAC,CAClCI,IAAI,CAAEC,GAAG,IAAI;QACZJ,KAAI,CAACR,eAAe,CAACY,GAAG,CAAClB,KAAK,EAAEkB,GAAG,CAACf,IAAI,CAAC;QACzC,OAAOe,GAAG;MACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAI;QAAG,MAAMA,CAAC;MAAE,CAAC,CAAC;MACnC;IAAA;EACJ;EAEAC,MAAMA,CAAA;IACJ,IAAI,CAACf,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC;IAChC,OAAO,IAAI;EACb;EAEAgB,QAAQA,CAACnB,IAAU,EAAEU,QAAgB;IACnC,OAAO,IAAI,CAAChB,GAAG,CAACmB,IAAI,CAAC,cAAc,EACzB;MAACJ,KAAK,EAAET,IAAI,CAACS,KAAK;MAAEC,QAAQ,EAAEA;IAAQ,CAAC,CAAC,CACvCI,IAAI,CAAEC,GAAG,IAAI;MACZ,IAAI,CAACZ,eAAe,CAACY,GAAG,CAAClB,KAAK,EAAEkB,GAAG,CAACf,IAAI,CAAC;MACzC,OAAOe,GAAG;IACZ,CAAC,CAAC,CACDC,KAAK,CAAEC,CAAC,IAAI;MAAG,MAAMA,CAAC;IAAE,CAAC,CAAC;EACvC;;;uBA7CWzB,WAAW,EAAA4B,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAX/B,WAAW;MAAAgC,OAAA,EAAXhC,WAAW,CAAAiC,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}