{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../api/api.service\";\nexport class FeedProviderService {\n  constructor(api) {\n    this.api = api;\n    this.currentFeed$ = new BehaviorSubject([]);\n  }\n  getFeed() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const req = yield _this.api.get('/feed');\n      const items = req.rows;\n      _this.currentFeed$.next(items);\n      return Promise.resolve(_this.currentFeed$);\n    })();\n  }\n  uploadFeedItem(caption, file) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const res = yield _this2.api.upload('/feed', file, {\n        caption: caption,\n        url: file.name\n      });\n      const feed = [res, ..._this2.currentFeed$.value];\n      _this2.currentFeed$.next(feed);\n      return res;\n    })();\n  }\n  static {\n    this.ɵfac = function FeedProviderService_Factory(t) {\n      return new (t || FeedProviderService)(i0.ɵɵinject(i1.ApiService));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: FeedProviderService,\n      factory: FeedProviderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["BehaviorSubject","FeedProviderService","constructor","api","currentFeed$","getFeed","_this","_asyncToGenerator","req","get","items","rows","next","Promise","resolve","uploadFeedItem","caption","file","_this2","res","upload","url","name","feed","value","i0","ɵɵinject","i1","ApiService","factory","ɵfac","providedIn"],"sources":["/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/feed/services/feed.provider.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { FeedItem, feedItemMocks } from '../models/feed-item.model';\nimport { BehaviorSubject } from 'rxjs';\n\nimport { ApiService } from '../../api/api.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FeedProviderService {\n  currentFeed$: BehaviorSubject<FeedItem[]> = new BehaviorSubject<FeedItem[]>([]);\n\n  constructor(private api: ApiService) { }\n\n  async getFeed(): Promise<BehaviorSubject<FeedItem[]>> {\n    const req = await this.api.get('/feed');\n    const items = <FeedItem[]> req.rows;\n    this.currentFeed$.next(items);\n    return Promise.resolve(this.currentFeed$);\n  }\n\n  async uploadFeedItem(caption: string, file: File): Promise<any> {\n    const res = await this.api.upload('/feed', file, {caption: caption, url: file.name});\n    const feed = [res, ...this.currentFeed$.value];\n    this.currentFeed$.next(feed);\n    return res;\n  }\n\n}"],"mappings":";AAEA,SAASA,eAAe,QAAQ,MAAM;;;AAOtC,OAAM,MAAOC,mBAAmB;EAG9BC,YAAoBC,GAAe;IAAf,KAAAA,GAAG,GAAHA,GAAG;IAFvB,KAAAC,YAAY,GAAgC,IAAIJ,eAAe,CAAa,EAAE,CAAC;EAExC;EAEjCK,OAAOA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACX,MAAMC,GAAG,SAASF,KAAI,CAACH,GAAG,CAACM,GAAG,CAAC,OAAO,CAAC;MACvC,MAAMC,KAAK,GAAgBF,GAAG,CAACG,IAAI;MACnCL,KAAI,CAACF,YAAY,CAACQ,IAAI,CAACF,KAAK,CAAC;MAC7B,OAAOG,OAAO,CAACC,OAAO,CAACR,KAAI,CAACF,YAAY,CAAC;IAAC;EAC5C;EAEMW,cAAcA,CAACC,OAAe,EAAEC,IAAU;IAAA,IAAAC,MAAA;IAAA,OAAAX,iBAAA;MAC9C,MAAMY,GAAG,SAASD,MAAI,CAACf,GAAG,CAACiB,MAAM,CAAC,OAAO,EAAEH,IAAI,EAAE;QAACD,OAAO,EAAEA,OAAO;QAAEK,GAAG,EAAEJ,IAAI,CAACK;MAAI,CAAC,CAAC;MACpF,MAAMC,IAAI,GAAG,CAACJ,GAAG,EAAE,GAAGD,MAAI,CAACd,YAAY,CAACoB,KAAK,CAAC;MAC9CN,MAAI,CAACd,YAAY,CAACQ,IAAI,CAACW,IAAI,CAAC;MAC5B,OAAOJ,GAAG;IAAC;EACb;;;uBAjBWlB,mBAAmB,EAAAwB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAnB3B,mBAAmB;MAAA4B,OAAA,EAAnB5B,mBAAmB,CAAA6B,IAAA;MAAAC,UAAA,EAFlB;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}