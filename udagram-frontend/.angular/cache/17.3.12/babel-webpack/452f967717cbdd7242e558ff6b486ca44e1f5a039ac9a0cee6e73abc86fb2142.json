{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/feed.provider.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nfunction FeedUploadComponent_img_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.previewDataUrl, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction FeedUploadComponent_a_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 8);\n    i0.ɵɵtext(1, \" Select a Photo \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class FeedUploadComponent {\n  constructor(feed, formBuilder, loadingController, modalController) {\n    this.feed = feed;\n    this.formBuilder = formBuilder;\n    this.loadingController = loadingController;\n    this.modalController = modalController;\n    this.previewDataUrl = null;\n    this.file = null;\n  }\n  ngOnInit() {\n    this.uploadForm = this.formBuilder.group({\n      caption: new FormControl('', Validators.required)\n    });\n  }\n  setPreviewDataUrl(file) {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      this.previewDataUrl = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n  selectImage(event) {\n    const element = event.currentTarget;\n    const fileList = element.files;\n    if (fileList) {\n      this.file = fileList[0];\n      this.setPreviewDataUrl(this.file);\n    }\n  }\n  onSubmit(event) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      event.preventDefault();\n      const loading = yield _this.loadingController.create();\n      yield loading.present();\n      if (!_this.uploadForm.valid || !_this.file) {\n        return;\n      }\n      try {\n        yield _this.feed.uploadFeedItem(_this.uploadForm.controls['caption'].value, _this.file);\n        yield _this.modalController.dismiss();\n      } finally {\n        yield loading.dismiss();\n      }\n    })();\n  }\n  cancel() {\n    this.modalController.dismiss();\n  }\n  static {\n    this.ɵfac = function FeedUploadComponent_Factory(t) {\n      return new (t || FeedUploadComponent)(i0.ɵɵdirectiveInject(i1.FeedProviderService), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.LoadingController), i0.ɵɵdirectiveInject(i3.ModalController));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: FeedUploadComponent,\n      selectors: [[\"app-feed-upload\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 12,\n      vars: 4,\n      consts: [[3, \"submit\", \"formGroup\"], [\"type\", \"file\", \"accept\", \"image/*\", 2, \"display\", \"none\", 3, \"change\"], [\"style\", \"width:50px; height: 50px;\", 3, \"src\", 4, \"ngIf\"], [\"ion-button\", \"\", \"color\", \"secondary\", 4, \"ngIf\"], [\"position\", \"floating\", \"color\", \"primary\"], [\"type\", \"text\", \"formControlName\", \"caption\", \"required\", \"\"], [\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [2, \"width\", \"50px\", \"height\", \"50px\", 3, \"src\"], [\"ion-button\", \"\", \"color\", \"secondary\"]],\n      template: function FeedUploadComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"form\", 0);\n          i0.ɵɵlistener(\"submit\", function FeedUploadComponent_Template_form_submit_0_listener($event) {\n            return ctx.onSubmit($event);\n          });\n          i0.ɵɵtext(1, \"` \");\n          i0.ɵɵelementStart(2, \"label\")(3, \"input\", 1);\n          i0.ɵɵlistener(\"change\", function FeedUploadComponent_Template_input_change_3_listener($event) {\n            return ctx.selectImage($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(4, FeedUploadComponent_img_4_Template, 1, 1, \"img\", 2)(5, FeedUploadComponent_a_5_Template, 2, 0, \"a\", 3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"ion-item\")(7, \"ion-label\", 4);\n          i0.ɵɵtext(8, \"Caption\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(9, \"ion-input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"ion-button\", 6);\n          i0.ɵɵtext(11, \" Post \");\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"formGroup\", ctx.uploadForm);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"ngIf\", ctx.previewDataUrl);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.previewDataUrl);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"disabled\", !ctx.uploadForm.valid || !ctx.file);\n        }\n      },\n      dependencies: [IonicModule, i3.IonButton, i3.IonInput, i3.IonItem, i3.IonLabel, i3.TextValueAccessor, CommonModule, i4.NgIf, ReactiveFormsModule, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["FormControl","Validators","ReactiveFormsModule","IonicModule","CommonModule","i0","ɵɵelement","ɵɵproperty","ctx_r0","previewDataUrl","ɵɵsanitizeUrl","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","FeedUploadComponent","constructor","feed","formBuilder","loadingController","modalController","file","ngOnInit","uploadForm","group","caption","required","setPreviewDataUrl","reader","FileReader","onloadend","result","readAsDataURL","selectImage","event","element","currentTarget","fileList","files","onSubmit","_this","_asyncToGenerator","preventDefault","loading","create","present","valid","uploadFeedItem","controls","value","dismiss","cancel","ɵɵdirectiveInject","i1","FeedProviderService","i2","FormBuilder","i3","LoadingController","ModalController","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","FeedUploadComponent_Template","rf","ctx","ɵɵlistener","FeedUploadComponent_Template_form_submit_0_listener","$event","FeedUploadComponent_Template_input_change_3_listener","ɵɵtemplate","FeedUploadComponent_img_4_Template","FeedUploadComponent_a_5_Template","ɵɵadvance","IonButton","IonInput","IonItem","IonLabel","TextValueAccessor","i4","NgIf","ɵNgNoValidate","NgControlStatus","NgControlStatusGroup","RequiredValidator","FormGroupDirective","FormControlName","styles"],"sources":["/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/feed/feed-upload/feed-upload.component.ts","/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/src/app/feed/feed-upload/feed-upload.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule, LoadingController, ModalController } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport { FeedProviderService } from '../services/feed.provider.service';\n\n@Component({\n  selector: 'app-feed-upload',\n  templateUrl: './feed-upload.component.html',\n  styleUrls: ['./feed-upload.component.scss'],\n  standalone: true,\n  imports: [\n    IonicModule,\n    CommonModule,\n    ReactiveFormsModule\n  ]\n})\nexport class FeedUploadComponent implements OnInit {\n  previewDataUrl: string | ArrayBuffer | null = null;\n  file: File | null = null;\n  uploadForm!: FormGroup;\n\n  constructor(\n    private feed: FeedProviderService,\n    private formBuilder: FormBuilder,\n    private loadingController: LoadingController,\n    private modalController: ModalController\n  ) { }\n\n  ngOnInit() {\n    this.uploadForm = this.formBuilder.group({\n      caption: new FormControl('', Validators.required)\n    });\n  }\n\n  setPreviewDataUrl(file: Blob) {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      this.previewDataUrl = reader.result;\n    };\n    reader.readAsDataURL(file);\n  }\n\n  selectImage(event: Event) {\n    const element = event.currentTarget as HTMLInputElement;\n    const fileList: FileList | null = element.files;\n\n    if (fileList) {\n      this.file = fileList[0];\n      this.setPreviewDataUrl(this.file);\n    }\n  }\n\n  async onSubmit(event: Event) {\n    event.preventDefault();\n    const loading = await this.loadingController.create();\n    await loading.present();\n\n    if (!this.uploadForm.valid || !this.file) { return; }\n\n    try {\n      await this.feed.uploadFeedItem(this.uploadForm.controls['caption'].value, this.file);\n      await this.modalController.dismiss();\n    } finally {\n      await loading.dismiss();\n    }\n  }\n\n  cancel() {\n    this.modalController.dismiss();\n  }\n}","<form [formGroup]=\"uploadForm\" (submit)=\"onSubmit($event)\">`\n    <label>\n        <input type=\"file\" (change)=\"selectImage($event)\" accept=\"image/*\" style=\"display:none\"/>\n        <img *ngIf=\"previewDataUrl\" [src]=\"previewDataUrl\" style=\"width:50px; height: 50px;\" />\n        <a *ngIf=\"!previewDataUrl\" ion-button color=\"secondary\">\n            Select a Photo\n        </a>\n    </label>\n    <ion-item>\n        <ion-label position=\"floating\" color=\"primary\">Caption</ion-label>\n        <ion-input type=\"text\" formControlName=\"caption\" required></ion-input>\n      </ion-item>\n      <ion-button \n        color=\"primary\" \n        type=\"submit\"\n        [disabled]=\"!uploadForm.valid || !file\">\n        Post\n      </ion-button>\n</form>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}