{"ast":null,"code":"import _asyncToGenerator from \"/Users/priyasingh/Desktop/aws-udacity-projects/cd0354-monolith-to-microservices-project/udagram-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { FormControl, Validators, ReactiveFormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/common\";\nfunction AuthLoginComponent_ion_text_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-text\", 6)(1, \"p\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r0.error);\n  }\n}\nexport let AuthLoginComponent = /*#__PURE__*/(() => {\n  class AuthLoginComponent {\n    constructor(formBuilder, auth, modal) {\n      this.formBuilder = formBuilder;\n      this.auth = auth;\n      this.modal = modal;\n      this.error = '';\n    }\n    ngOnInit() {\n      this.loginForm = this.formBuilder.group({\n        password: new FormControl('', {\n          nonNullable: true,\n          validators: Validators.required\n        }),\n        email: new FormControl('', {\n          nonNullable: true,\n          validators: [Validators.required, Validators.pattern('^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+$')]\n        })\n      });\n    }\n    onSubmit(event) {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        event.preventDefault();\n        if (!_this.loginForm.valid) {\n          return;\n        }\n        try {\n          yield _this.auth.login(_this.loginForm.controls.email.value, _this.loginForm.controls.password.value);\n          yield _this.modal.dismiss();\n        } catch (err) {\n          _this.error = err.statusText || 'An error occurred during login';\n          throw err;\n        }\n      })();\n    }\n    static {\n      this.ɵfac = function AuthLoginComponent_Factory(t) {\n        return new (t || AuthLoginComponent)(i0.ɵɵdirectiveInject(i1.NonNullableFormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ModalController));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: AuthLoginComponent,\n        selectors: [[\"app-auth-login\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 12,\n        vars: 3,\n        consts: [[3, \"submit\", \"formGroup\"], [\"position\", \"floating\", \"color\", \"primary\"], [\"type\", \"email\", \"formControlName\", \"email\", \"required\", \"\"], [\"type\", \"password\", \"formControlName\", \"password\", \"required\", \"\"], [\"color\", \"primary\", \"type\", \"submit\", 3, \"disabled\"], [\"color\", \"danger\", 4, \"ngIf\"], [\"color\", \"danger\"]],\n        template: function AuthLoginComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0);\n            i0.ɵɵlistener(\"submit\", function AuthLoginComponent_Template_form_submit_0_listener($event) {\n              return ctx.onSubmit($event);\n            });\n            i0.ɵɵelementStart(1, \"ion-item\")(2, \"ion-label\", 1);\n            i0.ɵɵtext(3, \"Email\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(4, \"ion-input\", 2);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"ion-item\")(6, \"ion-label\", 1);\n            i0.ɵɵtext(7, \"Password\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelement(8, \"ion-input\", 3);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(9, \"ion-button\", 4);\n            i0.ɵɵtext(10, \" Log In \");\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(11, AuthLoginComponent_ion_text_11_Template, 3, 1, \"ion-text\", 5);\n            i0.ɵɵelementEnd();\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"disabled\", !ctx.loginForm.valid);\n            i0.ɵɵadvance(2);\n            i0.ɵɵproperty(\"ngIf\", ctx.error);\n          }\n        },\n        dependencies: [IonicModule, i3.IonButton, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonText, i3.TextValueAccessor, CommonModule, i4.NgIf, ReactiveFormsModule, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.FormGroupDirective, i1.FormControlName]\n      });\n    }\n  }\n  return AuthLoginComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}